name: workflow

on: [pull_request]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.0" # .node-versionとバージョンをあわせる
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend
      - name: Run reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          reporter: github-check
          eslint_flags: "src/**/*.{ts,tsx}"
          workdir: ./frontend
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Touch .env.development
        run: |
          touch .env
          echo "BACKEND_PORT=${{ secrets.BACKEND_PORT }}" >> .env.development
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.development
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.development
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env.development
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.development
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env.development
          echo "DATABASE_URL=${{ secrets.DB_CONNECTION }}://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}" >> .env.development
        working-directory: ./backend

      - name: Run Docker
        run: docker-compose --env-file .env.development up -d
        working-directory: ./backend

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.0" # .node-versionとバージョンをあわせる
          cache: npm
          cache-dependency-path: ./backend/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Run reviewdog
        uses: reviewdog/action-eslint@v1
        with:
          reporter: github-check
          eslint_flags: "{src,test}/**/*.ts"
          workdir: ./backend

      - name: dotenv
        run: npm install -g dotenv-cli
        working-directory: ./backend

      - name: Run migrations
        run: yarn prisma:migration
        working-directory: ./backend

      - name: Run unit test
        run: yarn test
        working-directory: ./backend
